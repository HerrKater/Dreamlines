/*
 * Dreamlines Bookings Api
 *
 * This is prototype of the Dreamlines Bookings API The api allows access the bookings and their related SalesUnits. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using Dreamlines.Presentation.Api.Attributes;

using Microsoft.AspNetCore.Authorization;
using Dreamlines.Presentation.Api.Models;
using Dreamlines.ApplicationServices;
using System.Linq;
using IO.Swagger.Models;
using System.Threading.Tasks;

namespace Dreamlines.Presentation.Api.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class SalesunitApiController : ControllerBase
    {
		private readonly ISalesUnitService salesUnitService;

		public SalesunitApiController(ISalesUnitService salesUnitService)
		{
			this.salesUnitService = salesUnitService;
		}

        /// <summary>
        /// Finds a salesunit by ID
        /// </summary>
        /// <remarks>Returns a single salesunit</remarks>
        /// <param name="salesunitId">ID of salesunit to return</param>
        /// <response code="200">successful operation</response>
        /// <response code="400">Invalid ID supplied</response>
        /// <response code="404">Booking not found</response>
        [HttpGet]
        [Route("/DreamlinesApi/1.0.0/salesunit/{salesunitId}")]
        [ValidateModelState]
        [SwaggerOperation("GetSalesunitById")]
        [SwaggerResponse(statusCode: 200, type: typeof(SalesUnit), description: "successful operation")]
        public virtual async Task<IActionResult> GetSalesunitById([FromRoute][Required] int? salesunitId)
        {
            var su = await salesUnitService.GetById(salesunitId??0);
            return StatusCode(200, new SalesUnit(su));
        }

        /// <summary>
        /// Lists the salesunits
        /// </summary>
        /// <remarks>Returns a list of Sales Units, showing the name and the total price of their related Bookings. Results can be filtered by bookingIds or ship names.</remarks>
        /// <param name="searchTerm"></param>
        /// <param name="offset"></param>
        /// <param name="limit"></param>
        /// <response code="200">successful operation</response>
        [HttpGet]
        [Route("/DreamlinesApi/1.0.0/salesunit/search")]
        [ValidateModelState]
        [SwaggerOperation("Salesunitsearch")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<SalesUnitSummary>), description: "successful operation")]
        public virtual IActionResult Salesunitsearch([FromQuery]string searchTerm, [FromQuery]int? offset, [FromQuery]int? limit)
        {
            var salesUnits = salesUnitService.List(searchTerm, offset ?? 0, limit ?? int.MaxValue);
            return StatusCode(200, salesUnits.Select(su=>new SalesUnitSummary(su)));
        }
    }
}
